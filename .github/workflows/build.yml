name: 'build'

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  build-tauri:
    timeout-minutes: 60
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          # Ubuntu build temporarily disabled
          # - platform: 'ubuntu-22.04'
          #   args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Using the full history like in the successful workflow

      # Install dependencies for Ubuntu (commented out since Ubuntu build is disabled)
      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-22.04'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Remove certificate steps for build workflow - we'll sign in a separate workflow

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: bun install
        
      - name: Extract app version on Unix systems
        if: matrix.platform == 'macos-latest' # || matrix.platform == 'ubuntu-22.04'
        shell: bash
        run: |
          APP_VERSION=$(grep -m1 'version =' src-tauri/Cargo.toml | cut -d '"' -f2)
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Extract app version on Windows
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          $APP_VERSION = Select-String -Path src-tauri/Cargo.toml -Pattern 'version = "([^"]*)"' | ForEach-Object { $_.Matches.Groups[1].Value }
          echo "APP_VERSION=$APP_VERSION" >> $env:GITHUB_ENV

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Remove Apple signing variables for macOS build
          MACOSX_DEPLOYMENT_TARGET: 11.0
          # Optimize Rust compilation
          CARGO_BUILD_JOBS: 4
          CARGO_INCREMENTAL: true
          # Speed up macOS build
          MACOS_TARGETS_OPTIMIZED: true
        with:
          args: ${{ matrix.args }}
          
      # Upload artifacts by platform
      - name: Upload macOS artifacts
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-app-unsigned
          path: |
            src-tauri/target/universal-apple-darwin/release/bundle/macos/Balatro Mod Manager.app/**
          retention-days: 2
          
      - name: Upload Windows artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
          retention-days: 1

